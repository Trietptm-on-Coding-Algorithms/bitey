Bitey Changes Log
=================
08/13/2012 : beazley
             Slight cleanup of the various wrapping functions.  They are
             now layered a bit better to operate with LLVM at different
             levels. 

             To wrap bitcode into a module use:
                 bitey.wrap_llvm_bitcode(bitcode, py_module)

             To wrap an existing LLVM module/engine, use:
                 bitey.wrap_llvm_module(module, engine, py_module)

             To wrap a single LLVM function, use 
                 bitey.wrap_llvm_function(function, engine, py_module)

08/10/2012 : beazley
             New examples added.  Check out examples/remote to see
             an example of transmitting LLVM bitcode over a network
             connection and instantiating a remote Python module.

08/10/2012 : beazley
             Fixed a bug checking LLVM magic numbers.

08/10/2012 : beazley
             Minor refactoring of the loader.  There is now a function
             build_module(fullname, bitcode, preload, postload) that
             will construct a module and return it.  This can be used
             to create a module where the bitcode is obtained through
             some other means than reading a file.  preload and
             postload are fragments of Python code to execute prior to
             and after wrapping the bitcode.

08/09/2012 : beazley
             Initial release.
